{"ast":null,"code":"import _defineProperty from \"D:\\\\socialmedia\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport { createStyles } from '@mantine/styles';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = function __defNormalProp(obj, key, value) {\n  return key in obj ? __defProp(obj, key, {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: value\n  }) : obj[key] = value;\n};\nvar __spreadValues = function __spreadValues(a, b) {\n  for (var prop in b || (b = {})) {\n    if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  if (__getOwnPropSymbols) {\n    var _iterator = _createForOfIteratorHelper(__getOwnPropSymbols(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return a;\n};\nvar __spreadProps = function __spreadProps(a, b) {\n  return __defProps(a, __getOwnPropDescs(b));\n};\nvar useStyles = createStyles(function (theme, _ref, getRef) {\n  var color = _ref.color,\n    radius = _ref.radius,\n    variant = _ref.variant;\n  return {\n    root: __spreadProps(__spreadValues({}, theme.fn.fontStyles()), {\n      position: \"relative\",\n      overflow: \"hidden\",\n      padding: \"\".concat(theme.spacing.sm, \"px \").concat(theme.spacing.md, \"px\"),\n      borderRadius: theme.fn.radius(radius),\n      border: \"1px solid transparent\"\n    }),\n    wrapper: {\n      display: \"flex\"\n    },\n    body: {\n      flex: 1\n    },\n    title: {\n      boxSizing: \"border-box\",\n      margin: 0,\n      marginBottom: 7,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"space-between\",\n      lineHeight: theme.lineHeight,\n      fontSize: theme.fontSizes.sm,\n      fontWeight: 700\n    },\n    label: {\n      display: \"block\",\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    light: {\n      backgroundColor: theme.fn.variant({\n        variant: \"light\",\n        color: color\n      }).background,\n      color: theme.fn.variant({\n        variant: \"light\",\n        color: color\n      }).color\n    },\n    filled: _defineProperty({\n      backgroundColor: theme.fn.variant({\n        variant: \"filled\",\n        color: color\n      }).background,\n      color: theme.white\n    }, \"& .\".concat(getRef(\"closeButton\")), {\n      color: theme.white\n    }),\n    outline: {\n      color: theme.fn.variant({\n        variant: \"outline\",\n        color: color\n      }).color,\n      borderColor: theme.fn.variant({\n        variant: \"outline\",\n        color: color\n      }).border\n    },\n    icon: {\n      lineHeight: 1,\n      width: 20,\n      height: 20,\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"flex-start\",\n      marginRight: theme.spacing.md,\n      marginTop: 1\n    },\n    message: __spreadProps(__spreadValues({}, theme.fn.fontStyles()), {\n      lineHeight: theme.lineHeight,\n      textOverflow: \"ellipsis\",\n      overflow: \"hidden\",\n      fontSize: theme.fontSizes.sm,\n      color: variant === \"filled\" ? theme.white : theme.colorScheme === \"dark\" ? variant === \"light\" ? theme.white : theme.colors.dark[0] : theme.black\n    }),\n    closeButton: {\n      ref: getRef(\"closeButton\"),\n      marginTop: 2\n    }\n  };\n});\nexport default useStyles;","map":null,"metadata":{},"sourceType":"module"}