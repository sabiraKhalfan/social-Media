{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nconst sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5\n};\nvar useStyles = createStyles((theme, _ref) => {\n  let {\n    size,\n    variant,\n    color\n  } = _ref;\n  return {\n    root: {},\n    withLabel: {\n      borderTop: \"0 !important\"\n    },\n    left: {\n      \"&::before\": {\n        display: \"none\"\n      }\n    },\n    right: {\n      \"&::after\": {\n        display: \"none\"\n      }\n    },\n    label: {\n      display: \"flex\",\n      alignItems: \"center\",\n      color: color === \"dark\" ? theme.colors.dark[1] : theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 5 : theme.fn.primaryShade()),\n      \"&::before\": {\n        content: '\"\"',\n        flex: 1,\n        height: 1,\n        borderTop: `${theme.fn.size({\n          size,\n          sizes\n        })}px ${variant} ${theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 3 : 4)}`,\n        marginRight: theme.spacing.xs\n      },\n      \"&::after\": {\n        content: '\"\"',\n        flex: 1,\n        borderTop: `${theme.fn.size({\n          size,\n          sizes\n        })}px ${variant} ${theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 3 : 4)}`,\n        marginLeft: theme.spacing.xs\n      }\n    },\n    horizontal: {\n      border: 0,\n      borderTopWidth: theme.fn.size({\n        size,\n        sizes\n      }),\n      borderTopColor: theme.fn.themeColor(color, theme.colorScheme === \"dark\" ? 3 : 4),\n      borderTopStyle: variant,\n      margin: 0\n    },\n    vertical: {\n      border: 0,\n      alignSelf: \"stretch\",\n      height: \"100%\",\n      borderLeftWidth: theme.fn.size({\n        size,\n        sizes\n      }),\n      borderLeftColor: theme.fn.themeColor(color, 4),\n      borderLeftStyle: variant\n    }\n  };\n});\nexport default useStyles;\nexport { sizes };","map":{"version":3,"mappings":";AACY,MAACA,KAAK,GAAG;EACnBC,EAAE,EAAE,CAAC;EACLC,EAAE,EAAE,CAAC;EACLC,EAAE,EAAE,CAAC;EACLC,EAAE,EAAE,CAAC;EACLC,EAAE,EAAE;AACN;AACA,gBAAeC,YAAY,CAAC,CAACC,KAAK;EAAA,IAAE;IAAEC,IAAI;IAAEC,OAAO;IAAEC;EAAK,CAAE;EAAA,OAAM;IAChEC,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE;MACTC,SAAS,EAAE;IACf,CAAG;IACDC,IAAI,EAAE;MACJ,WAAW,EAAE;QACXC,OAAO,EAAE;MACf;IACA,CAAG;IACDC,KAAK,EAAE;MACL,UAAU,EAAE;QACVD,OAAO,EAAE;MACf;IACA,CAAG;IACDE,KAAK,EAAE;MACLF,OAAO,EAAE,MAAM;MACfG,UAAU,EAAE,QAAQ;MACpBR,KAAK,EAAEA,KAAK,KAAK,MAAM,GAAGH,KAAK,CAACY,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,GAAGb,KAAK,CAACc,EAAE,CAACC,UAAU,CAACZ,KAAK,EAAEH,KAAK,CAACgB,WAAW,KAAK,MAAM,GAAG,CAAC,GAAGhB,KAAK,CAACc,EAAE,CAACG,YAAY,EAAE,CAAC;MACvI,WAAW,EAAE;QACXC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,CAAC;QACPC,MAAM,EAAE,CAAC;QACTd,SAAS,EAAG,GAAEN,KAAK,CAACc,EAAE,CAACb,IAAI,CAAC;UAAEA,IAAI;UAAER;QAAK,CAAE,CAAE,MAAKS,OAAQ,IAAGF,KAAK,CAACc,EAAE,CAACC,UAAU,CAACZ,KAAK,EAAEH,KAAK,CAACgB,WAAW,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,EAAC;QAC/HK,WAAW,EAAErB,KAAK,CAACsB,OAAO,CAAC5B;MACjC,CAAK;MACD,UAAU,EAAE;QACVwB,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,CAAC;QACPb,SAAS,EAAG,GAAEN,KAAK,CAACc,EAAE,CAACb,IAAI,CAAC;UAAEA,IAAI;UAAER;QAAK,CAAE,CAAE,MAAKS,OAAQ,IAAGF,KAAK,CAACc,EAAE,CAACC,UAAU,CAACZ,KAAK,EAAEH,KAAK,CAACgB,WAAW,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAE,EAAC;QAC/HO,UAAU,EAAEvB,KAAK,CAACsB,OAAO,CAAC5B;MAChC;IACA,CAAG;IACD8B,UAAU,EAAE;MACVC,MAAM,EAAE,CAAC;MACTC,cAAc,EAAE1B,KAAK,CAACc,EAAE,CAACb,IAAI,CAAC;QAAEA,IAAI;QAAER;MAAK,CAAE,CAAC;MAC9CkC,cAAc,EAAE3B,KAAK,CAACc,EAAE,CAACC,UAAU,CAACZ,KAAK,EAAEH,KAAK,CAACgB,WAAW,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;MAChFY,cAAc,EAAE1B,OAAO;MACvB2B,MAAM,EAAE;IACZ,CAAG;IACDC,QAAQ,EAAE;MACRL,MAAM,EAAE,CAAC;MACTM,SAAS,EAAE,SAAS;MACpBX,MAAM,EAAE,MAAM;MACdY,eAAe,EAAEhC,KAAK,CAACc,EAAE,CAACb,IAAI,CAAC;QAAEA,IAAI;QAAER;MAAK,CAAE,CAAC;MAC/CwC,eAAe,EAAEjC,KAAK,CAACc,EAAE,CAACC,UAAU,CAACZ,KAAK,EAAE,CAAC,CAAC;MAC9C+B,eAAe,EAAEhC;IACrB;EACA,CAAC;AAAA,CAAC,CAAC","names":["sizes","xs","sm","md","lg","xl","createStyles","theme","size","variant","color","root","withLabel","borderTop","left","display","right","label","alignItems","colors","dark","fn","themeColor","colorScheme","primaryShade","content","flex","height","marginRight","spacing","marginLeft","horizontal","border","borderTopWidth","borderTopColor","borderTopStyle","margin","vertical","alignSelf","borderLeftWidth","borderLeftColor","borderLeftStyle"],"sources":["D:\\socialmedia\\client\\node_modules\\@mantine\\core\\src\\components\\Divider\\Divider.styles.ts"],"sourcesContent":["import { createStyles, MantineNumberSize, MantineColor } from '@mantine/styles';\n\nexport interface DividerStylesParams {\n  size: MantineNumberSize;\n  variant: 'solid' | 'dashed' | 'dotted';\n  color: MantineColor;\n}\n\nexport const sizes = {\n  xs: 1,\n  sm: 2,\n  md: 3,\n  lg: 4,\n  xl: 5,\n};\n\nexport default createStyles((theme, { size, variant, color }: DividerStylesParams) => ({\n  root: {},\n\n  withLabel: {\n    borderTop: '0 !important',\n  },\n\n  left: {\n    '&::before': {\n      display: 'none',\n    },\n  },\n\n  right: {\n    '&::after': {\n      display: 'none',\n    },\n  },\n\n  label: {\n    display: 'flex',\n    alignItems: 'center',\n    color:\n      color === 'dark'\n        ? theme.colors.dark[1]\n        : theme.fn.themeColor(color, theme.colorScheme === 'dark' ? 5 : theme.fn.primaryShade()),\n\n    '&::before': {\n      content: '\"\"',\n      flex: 1,\n      height: 1,\n      borderTop: `${theme.fn.size({ size, sizes })}px ${variant} ${theme.fn.themeColor(\n        color,\n        theme.colorScheme === 'dark' ? 3 : 4\n      )}`,\n      marginRight: theme.spacing.xs,\n    },\n\n    '&::after': {\n      content: '\"\"',\n      flex: 1,\n      borderTop: `${theme.fn.size({ size, sizes })}px ${variant} ${theme.fn.themeColor(\n        color,\n        theme.colorScheme === 'dark' ? 3 : 4\n      )}`,\n      marginLeft: theme.spacing.xs,\n    },\n  },\n\n  horizontal: {\n    border: 0,\n    borderTopWidth: theme.fn.size({ size, sizes }),\n    borderTopColor: theme.fn.themeColor(color, theme.colorScheme === 'dark' ? 3 : 4),\n    borderTopStyle: variant,\n    margin: 0,\n  },\n\n  vertical: {\n    border: 0,\n    alignSelf: 'stretch',\n    height: '100%',\n    borderLeftWidth: theme.fn.size({ size, sizes }),\n    borderLeftColor: theme.fn.themeColor(color, 4),\n    borderLeftStyle: variant,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}