{"ast":null,"code":"import { rgba } from '../rgba/rgba.js';\nimport { themeColor } from '../theme-color/theme-color.js';\nimport { primaryShade } from '../primary-shade/primary-shade.js';\nvar DEFAULT_GRADIENT = {\n  from: \"indigo\",\n  to: \"cyan\",\n  deg: 45\n};\nfunction variant(theme) {\n  var getThemeColor = themeColor(theme);\n  var getPrimaryShade = primaryShade(theme);\n  return function (_ref) {\n    var variant2 = _ref.variant,\n      color = _ref.color,\n      gradient = _ref.gradient;\n    if (variant2 === \"light\") {\n      return {\n        border: \"transparent\",\n        background: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0), theme.colorScheme === \"dark\" ? 0.35 : 1),\n        color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n        hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 7 : 1), theme.colorScheme === \"dark\" ? 0.45 : 0.65)\n      };\n    }\n    if (variant2 === \"default\") {\n      return {\n        border: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[4],\n        background: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.white,\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n        hover: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[0]\n      };\n    }\n    if (variant2 === \"white\") {\n      return {\n        border: \"transparent\",\n        background: theme.white,\n        color: getThemeColor(color, getPrimaryShade()),\n        hover: null\n      };\n    }\n    if (variant2 === \"outline\") {\n      return {\n        border: getThemeColor(color, theme.colorScheme === \"dark\" ? 4 : getPrimaryShade(\"light\")),\n        background: \"transparent\",\n        color: getThemeColor(color, theme.colorScheme === \"dark\" ? 4 : getPrimaryShade(\"light\")),\n        hover: theme.colorScheme === \"dark\" ? rgba(getThemeColor(color, 4), 0.05) : rgba(getThemeColor(color, 0), 0.35)\n      };\n    }\n    if (variant2 === \"gradient\") {\n      var merged = {\n        from: (gradient == null ? void 0 : gradient.from) || DEFAULT_GRADIENT.from,\n        to: (gradient == null ? void 0 : gradient.to) || DEFAULT_GRADIENT.to,\n        deg: (gradient == null ? void 0 : gradient.deg) || DEFAULT_GRADIENT.deg\n      };\n      return {\n        background: \"linear-gradient(\".concat(merged.deg, \"deg, \").concat(getThemeColor(merged.from, getPrimaryShade(), false), \" 0%, \").concat(getThemeColor(merged.to, getPrimaryShade(), false), \" 100%)\"),\n        color: theme.white,\n        border: \"transparent\",\n        hover: null\n      };\n    }\n    if (variant2 === \"subtle\") {\n      return {\n        border: \"transparent\",\n        background: \"transparent\",\n        color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n        hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0), theme.colorScheme === \"dark\" ? 0.35 : 1)\n      };\n    }\n    return {\n      border: \"transparent\",\n      background: getThemeColor(color, getPrimaryShade()),\n      color: theme.white,\n      hover: getThemeColor(color, getPrimaryShade() === 9 ? 8 : getPrimaryShade() + 1)\n    };\n  };\n}\nexport { variant };","map":null,"metadata":{},"sourceType":"module"}