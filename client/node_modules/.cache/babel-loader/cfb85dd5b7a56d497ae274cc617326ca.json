{"ast":null,"code":"import { legacy_createStore as createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nvar middlewares = [ReduxThunk];\nimport { reducers } from \"../reducers\";\nfunction saveToLocalStorage(store) {\n  try {\n    var serializedStore = JSON.stringify(store);\n    window.localStorage.setItem('store', serializedStore);\n  } catch (e) {\n    console.log(e);\n  }\n}\nfunction loadFromLocalStorage() {\n  try {\n    var serializedStore = window.localStorage.getItem('store');\n    if (serializedStore === null) return undefined;\n    return JSON.parse(serializedStore);\n  } catch (e) {\n    console.log(e);\n    return undefined;\n  }\n}\nvar composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar persistedState = loadFromLocalStorage();\nvar store = createStore(reducers, persistedState, composeEnhancers(applyMiddleware(thunk)));\nstore.subscribe(function () {\n  return saveToLocalStorage(store.getState());\n});\nexport default store;\n\n// basically in store we store all our states","map":{"version":3,"names":["legacy_createStore","createStore","applyMiddleware","compose","thunk","middlewares","ReduxThunk","reducers","saveToLocalStorage","store","serializedStore","JSON","stringify","window","localStorage","setItem","e","console","log","loadFromLocalStorage","getItem","undefined","parse","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","persistedState","subscribe","getState"],"sources":["D:/socialmedia/client/src/Store/ReduxStore.js"],"sourcesContent":["import {\r\n    legacy_createStore as createStore,\r\n    applyMiddleware,\r\n    compose,\r\n  } from \"redux\";\r\n  import thunk from \"redux-thunk\";\r\n  const middlewares = [ReduxThunk];\r\n  import { reducers } from \"../reducers\";\r\n  \r\n  function saveToLocalStorage(store) {\r\n    try {\r\n        const serializedStore = JSON.stringify(store);\r\n        window.localStorage.setItem('store', serializedStore);\r\n    } catch(e) {\r\n        console.log(e);\r\n    }\r\n  }\r\n  \r\n  function loadFromLocalStorage() {\r\n    try {\r\n        const serializedStore = window.localStorage.getItem('store');\r\n        if(serializedStore === null) return undefined;\r\n        return JSON.parse(serializedStore);\r\n    } catch(e) {\r\n        console.log(e);\r\n        return undefined;\r\n    }\r\n  }\r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const persistedState = loadFromLocalStorage();\r\n  \r\n  const store = createStore(reducers, persistedState, composeEnhancers(applyMiddleware(thunk)));\r\n  \r\n  store.subscribe(() => saveToLocalStorage(store.getState()));\r\n  \r\n  export default store;\r\n\r\n  // basically in store we store all our states"],"mappings":"AAAA,SACIA,kBAAkB,IAAIC,WAAW,EACjCC,eAAe,EACfC,OAAO,QACF,OAAO;AACd,OAAOC,KAAK,MAAM,aAAa;AAC/B,IAAMC,WAAW,GAAG,CAACC,UAAU,CAAC;AAChC,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,kBAAkB,CAACC,KAAK,EAAE;EACjC,IAAI;IACA,IAAMC,eAAe,GAAGC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC;IAC7CI,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEL,eAAe,CAAC;EACzD,CAAC,CAAC,OAAMM,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;EAClB;AACF;AAEA,SAASG,oBAAoB,GAAG;EAC9B,IAAI;IACA,IAAMT,eAAe,GAAGG,MAAM,CAACC,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAC5D,IAAGV,eAAe,KAAK,IAAI,EAAE,OAAOW,SAAS;IAC7C,OAAOV,IAAI,CAACW,KAAK,CAACZ,eAAe,CAAC;EACtC,CAAC,CAAC,OAAMM,CAAC,EAAE;IACPC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IACd,OAAOK,SAAS;EACpB;AACF;AACA,IAAME,gBAAgB,GAAGV,MAAM,CAACW,oCAAoC,IAAIrB,OAAO;AAC/E,IAAMsB,cAAc,GAAGN,oBAAoB,EAAE;AAE7C,IAAMV,KAAK,GAAGR,WAAW,CAACM,QAAQ,EAAEkB,cAAc,EAAEF,gBAAgB,CAACrB,eAAe,CAACE,KAAK,CAAC,CAAC,CAAC;AAE7FK,KAAK,CAACiB,SAAS,CAAC;EAAA,OAAMlB,kBAAkB,CAACC,KAAK,CAACkB,QAAQ,EAAE,CAAC;AAAA,EAAC;AAE3D,eAAelB,KAAK;;AAEpB"},"metadata":{},"sourceType":"module"}