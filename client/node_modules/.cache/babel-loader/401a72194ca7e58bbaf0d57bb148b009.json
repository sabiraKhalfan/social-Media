{"ast":null,"code":"import _slicedToArray from \"D:\\\\socialmedia\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { useState, useRef, useEffect } from 'react';\nfunction attachMediaListener(query, callback) {\n  try {\n    query.addEventListener(\"change\", callback);\n    return function () {\n      return query.removeEventListener(\"change\", callback);\n    };\n  } catch (e) {\n    query.addListener(callback);\n    return function () {\n      return query.removeListener(callback);\n    };\n  }\n}\nfunction getInitialValue(query, initialValue) {\n  if (initialValue !== void 0) {\n    return initialValue;\n  }\n  if (typeof window !== \"undefined\" && \"matchMedia\" in window) {\n    return window.matchMedia(query).matches;\n  }\n  return false;\n}\nfunction useMediaQuery(query, initialValue) {\n  var _useState = useState(getInitialValue(query, initialValue)),\n    _useState2 = _slicedToArray(_useState, 2),\n    matches = _useState2[0],\n    setMatches = _useState2[1];\n  var queryRef = useRef();\n  useEffect(function () {\n    if (\"matchMedia\" in window) {\n      queryRef.current = window.matchMedia(query);\n      setMatches(queryRef.current.matches);\n      return attachMediaListener(queryRef.current, function (event) {\n        return setMatches(event.matches);\n      });\n    }\n    return void 0;\n  }, [query]);\n  return matches;\n}\nexport { useMediaQuery };","map":null,"metadata":{},"sourceType":"module"}